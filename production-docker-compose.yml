version: "3"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
  #combination of the COMPOSE_PROJECT_NAME or the source path folder and the network name
  msuwv_backend:
    external: true
  mshrapi_backend:
    external: true

volumes:
  mariadb:
    driver: ${VOLUMES_DRIVER}
  mariadb_data:
    external: true

services:
  ### Workspace Utilities ##################################
  workspace:
    build:
      context: ./workspace
      args:
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_SUBVERSION=${WORKSPACE_INSTALL_SUBVERSION}
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${WORKSPACE_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${WORKSPACE_INSTALL_SSH2}
        - INSTALL_GMP=${WORKSPACE_INSTALL_GMP}
        - INSTALL_SOAP=${WORKSPACE_INSTALL_SOAP}
        - INSTALL_XSL=${WORKSPACE_INSTALL_XSL}
        - INSTALL_LDAP=${WORKSPACE_INSTALL_LDAP}
        - INSTALL_IMAP=${WORKSPACE_INSTALL_IMAP}
        - INSTALL_MONGO=${WORKSPACE_INSTALL_MONGO}
        - INSTALL_AMQP=${WORKSPACE_INSTALL_AMQP}
        - INSTALL_PHPREDIS=${WORKSPACE_INSTALL_PHPREDIS}
        - INSTALL_MSSQL=${WORKSPACE_INSTALL_MSSQL}
        - INSTALL_NODE=${WORKSPACE_INSTALL_NODE}
        - NPM_REGISTRY=${WORKSPACE_NPM_REGISTRY}
        - INSTALL_YARN=${WORKSPACE_INSTALL_YARN}
        - INSTALL_NPM_GULP=${WORKSPACE_INSTALL_NPM_GULP}
        - INSTALL_NPM_BOWER=${WORKSPACE_INSTALL_NPM_BOWER}
        - INSTALL_NPM_VUE_CLI=${WORKSPACE_INSTALL_NPM_VUE_CLI}
        - INSTALL_NPM_ANGULAR_CLI=${WORKSPACE_INSTALL_NPM_ANGULAR_CLI}
        - INSTALL_DRUSH=${WORKSPACE_INSTALL_DRUSH}
        - INSTALL_WP_CLI=${WORKSPACE_INSTALL_WP_CLI}
        - INSTALL_DRUPAL_CONSOLE=${WORKSPACE_INSTALL_DRUPAL_CONSOLE}
        - INSTALL_AEROSPIKE=${WORKSPACE_INSTALL_AEROSPIKE}
        - INSTALL_V8JS=${WORKSPACE_INSTALL_V8JS}
        - COMPOSER_GLOBAL_INSTALL=${WORKSPACE_COMPOSER_GLOBAL_INSTALL}
        - COMPOSER_AUTH=${WORKSPACE_COMPOSER_AUTH}
        - COMPOSER_REPO_PACKAGIST=${WORKSPACE_COMPOSER_REPO_PACKAGIST}
        - INSTALL_WORKSPACE_SSH=${WORKSPACE_INSTALL_WORKSPACE_SSH}
        - INSTALL_LARAVEL_ENVOY=${WORKSPACE_INSTALL_LARAVEL_ENVOY}
        - INSTALL_LARAVEL_INSTALLER=${WORKSPACE_INSTALL_LARAVEL_INSTALLER}
        - INSTALL_DEPLOYER=${WORKSPACE_INSTALL_DEPLOYER}
        - INSTALL_PRESTISSIMO=${WORKSPACE_INSTALL_PRESTISSIMO}
        - INSTALL_LINUXBREW=${WORKSPACE_INSTALL_LINUXBREW}
        - INSTALL_MC=${WORKSPACE_INSTALL_MC}
        - INSTALL_SYMFONY=${WORKSPACE_INSTALL_SYMFONY}
        - INSTALL_PYTHON=${WORKSPACE_INSTALL_PYTHON}
        - INSTALL_IMAGE_OPTIMIZERS=${WORKSPACE_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${WORKSPACE_INSTALL_IMAGEMAGICK}
        - INSTALL_TERRAFORM=${WORKSPACE_INSTALL_TERRAFORM}
        - INSTALL_DUSK_DEPS=${WORKSPACE_INSTALL_DUSK_DEPS}
        - INSTALL_PG_CLIENT=${WORKSPACE_INSTALL_PG_CLIENT}
        - INSTALL_PHALCON=${WORKSPACE_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${WORKSPACE_INSTALL_SWOOLE}
        - INSTALL_TAINT=${WORKSPACE_INSTALL_TAINT}
        - INSTALL_LIBPNG=${WORKSPACE_INSTALL_LIBPNG}
        - INSTALL_IONCUBE=${WORKSPACE_INSTALL_IONCUBE}
        - INSTALL_MYSQL_CLIENT=${WORKSPACE_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${WORKSPACE_INSTALL_PING}
        - INSTALL_SSHPASS=${WORKSPACE_INSTALL_SSHPASS}
        - PUID=${WORKSPACE_PUID}
        - PGID=${WORKSPACE_PGID}
        - CHROME_DRIVER_VERSION=${WORKSPACE_CHROME_DRIVER_VERSION}
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - YARN_VERSION=${WORKSPACE_YARN_VERSION}
        - DRUSH_VERSION=${WORKSPACE_DRUSH_VERSION}
        - TZ=${WORKSPACE_TIMEZONE}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - INSTALL_POWERLINE=${WORKSPACE_INSTALL_POWERLINE}
        - INSTALL_FFMPEG=${WORKSPACE_INSTALL_FFMPEG}
        - INSTALL_GNU_PARALLEL=${WORKSPACE_INSTALL_GNU_PARALLEL}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      # - ${BACKUP_PATH}:/bin/backup
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
    networks:
      - frontend
      - backend
      - mshrapi_backend
    links:
      - docker-in-docker
    external_links:
      - ms-hrapi_ms-hrapi_1
    # restart: always

  ### PHP-FPM ##############################################
  php-fpm:
    build:
      context: ./php-fpm
      args:
        - LARADOCK_PHP_VERSION=${PHP_VERSION}
        - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
        - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
        - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
        - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
        - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
        - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
        - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
        - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
        - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
        - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
        - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
        - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
        - INSTALL_PING=${PHP_FPM_INSTALL_PING}
        - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
        - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
        - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - "9000"
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    environment:
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - DOCKER_HOST=tcp://docker-in-docker:2375
      - FAKETIME=${PHP_FPM_FAKETIME}
    depends_on:
      - workspace
    networks:
      - backend
      - msuwv_backend
      - mshrapi_backend
    links:
      - docker-in-docker
    external_links:
      - ms-uwv_ms-uwv_1
      - ms-hrapi_ms-hrapi_1
    # restart: always

  ### PHP Worker ############################################
  php-worker:
    build:
      context: ./php-worker
      args:
        - PHP_VERSION=${PHP_VERSION}
        - PHALCON_VERSION=${PHALCON_VERSION}
        - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
        - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}
        - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}
        - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}
        - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
        - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}
        - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}
        - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}
        - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}
        - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}
        - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
        - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}
        - PUID=${PHP_WORKER_PUID}
        - PGID=${PHP_WORKER_PGID}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ./php-worker/supervisord.d:/etc/supervisord.d
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend
      - mshrapi_backend
    external_links:
      - ms-hrapi_ms-hrapi_1
    # restart: always

  ### Apache Server ########################################
  apache2:
    build:
      context: ./apache2
      args:
        - PHP_UPSTREAM_CONTAINER=${APACHE_PHP_UPSTREAM_CONTAINER}
        - PHP_UPSTREAM_PORT=${APACHE_PHP_UPSTREAM_PORT}
        - PHP_UPSTREAM_TIMEOUT=${APACHE_PHP_UPSTREAM_TIMEOUT}
        - DOCUMENT_ROOT=${APACHE_DOCUMENT_ROOT}
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${APACHE_HOST_LOG_PATH}:/var/log/apache2
      - ${APACHE_SITES_PATH}:/etc/apache2/sites-available
      - ./data/certbot/certs/:/var/certs
      - ./certbot/letsencrypt/.well-known:/var/www/public_html/.well-known
    ports:
      - "${APACHE_HOST_HTTP_PORT}:80"
      - "${APACHE_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend
    # restart: always

  ### MariaDB ##############################################
  mariadb:
    build:
      context: ./mariadb
      args:
        - http_proxy
        - https_proxy
        - no_proxy
    #make sure the port is not open in production
    # ports:
    #   - "${MARIADB_PORT}:3306"
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    networks:
      backend:
        aliases:
          - laradock_mariadb
    # restart: always

  ### Beanstalkd ###########################################
  beanstalkd:
    build: ./beanstalkd
    ports:
      - "${BEANSTALKD_HOST_PORT}:11300"
    privileged: true
    volumes:
      - ./beanstalkd/backup:/var/lib/beanstalkd/data/backup
    depends_on:
      - php-fpm
    networks:
      - backend
      - mshrapi_backend
    external_links:
      - ms-hrapi_ms-hrapi_1
    # restart: always
    ### Docker-in-Docker ################################################
  docker-in-docker:
    image: docker:dind
    privileged: true
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    expose:
      - 2375
    networks:
      - backend
    # restart: always
  #Only in test enviroment
  # Certbot #########################################
  # certbot:
  #   build:
  #     context: ./certbot
  #   volumes:
  #     - ./data/certbot/certs/:/var/certs
  #     - ./certbot/letsencrypt/.well-known:/var/www/public_html/.well-known
  #   environment:
  #     - CN1=${HOST_SERVER1}
  #     - EMAIL=${HOST_MAIL}
  #     # - CN2=${HOST_SERVER2}
  #   networks:
  #     - frontend

  ### NetData ################################################
  # netdata:
  #   image: titpetric/netdata:latest
  #   cap_add:
  #     - SYS_PTRACE
  #   volumes:
  #     - /:/host:ro
  #   ports:
  #     - "${NETDATA_PORT}:19999"
  #   networks:
  #     - backend
  #   # restart: always
  ### Beanstalkd Console ###################################
  beanstalkd-console:
    build: ./beanstalkd-console
    ports:
      - "${BEANSTALKD_CONSOLE_HOST_PORT}:2080"
    environment:
      - BEANSTALKD_CONSOLE_AUTH=${BEANSTALKD_CONSOLE_AUTH}
      - BEANSTALKD_CONSOLE_AUTH_USERNAME=${BEANSTALKD_CONSOLE_AUTH_USERNAME}
      - BEANSTALKD_CONSOLE_AUTH_PASSWORD=${BEANSTALKD_CONSOLE_AUTH_PASSWORD}
    depends_on:
      - beanstalkd
    networks:
      - backend

  ### laravel-echo-server ####################################
  laravel-echo-server:
    build:
      context: ./laravel-echo-server
    volumes:
      - ${LARAVEL_ECHO_SERVER_PATH}:/usr/src/app/laravel-echo-server.json:ro
      - ./data/certbot/certs/:/var/certs
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT}:6001"
    networks:
      - frontend
      - backend
